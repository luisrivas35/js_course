DROP TABLE IF EXISTS transferencias;
DROP TABLE IF EXISTS cuentas;

CREATE TABLE cuentas (
	id INT PRIMARY KEY, 
	saldo DECIMAL CHECK (saldo >= 0) 
);

INSERT INTO CUENTAS (id, saldo) VALUES 
(1, 10000),
(2, 20000);

INSERT INTO CUENTAS (id, saldo) VALUES 
(3, 500);

CREATE TABLE transferencias(
	id SERIAL PRIMARY KEY, 
	fecha DATE DEFAULT CURRENT_DATE, 
	monto DECIMAL,
	cuenta_origen INT, 
	cuenta_destino INT,
	FOREIGN KEY(cuenta_origen) REFERENCES cuentas(id) ON DELETE CASCADE,
	FOREIGN KEY(cuenta_destino) REFERENCES cuentas(id) ON DELETE CASCADE
);

-- TRANSACCIÃ“N

BEGIN;

UPDATE CUENTAS
SET SALDO = SALDO - 100
WHERE ID = 1;

UPDATE CUENTAS
SET SALDO = SALDO + 100
WHERE ID = 2;

INSERT INTO TRANSFERENCIAS (MONTO, cuenta_origen, cuenta_destino)
VALUES (100, 1, 2);

COMMIT;

BEGIN;

UPDATE CUENTAS
SET SALDO = SALDO - 200
WHERE ID = 1;

UPDATE CUENTAS
SET SALDO = SALDO + 200
WHERE ID = 2;

INSERT INTO TRANSFERENCIAS (MONTO, cuenta_origen, cuenta_destino)
VALUES (100, 1, 2);

COMMIT;

SELECT * FROM TRANSFERENCIAS;
SELECT * FROM CUENTAS;


BEGIN;

UPDATE CUENTAS
SET SALDO = SALDO - 200
WHERE ID = 3;

UPDATE CUENTAS
SET SALDO = SALDO + 200
WHERE ID = 2;

INSERT INTO TRANSFERENCIAS (MONTO, cuenta_origen, cuenta_destino)
VALUES (100, 3, 2);

COMMIT;


BEGIN;

UPDATE CUENTAS
SET SALDO = SALDO - 50
WHERE ID = 3;

UPDATE CUENTAS
SET SALDO = SALDO + 50
WHERE ID = 1;

INSERT INTO TRANSFERENCIAS (MONTO, cuenta_origen, cuenta_destino)
VALUES (100, 3, 1);

COMMIT;